pipeline {
    agent any

    environment {
        IMAGE_NAME = "my-java-app"
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    parameters {
        string(name: 'BRANCH_TAG', defaultValue: 'main', description: 'Git Branch or Tag')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${params.BRANCH_TAG}", url: 'https://github.com/gnanendra9398/DEVOPS.git'
            }
        }

        stage('Build') {
            steps {
                dir('hello-java') { 
                    sh 'mvn clean install -DskipTests'
                }
            }
        }

        stage('Test') {
            steps {
                dir('hello-java') {
                    sh 'mvn test'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('hello-java') {
                    script {
                        sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                    }
                }
            }
        }

        // Optional stage if pushing to a registry
        /*
        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub-cred', url: '']) {
                    sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} your-dockerhub-username/${IMAGE_NAME}:${IMAGE_TAG}"
                    sh "docker push your-dockerhub-username/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
        */
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Build and Docker Image created successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
